# Basic Command List

# Capture all the events from the live system and print them to screen
sysdig

# Capture all the events from the live system and save them to disk
sysdig -qw dumpfile.scap

# Read events from a file and print them to screen
sysdig -r dumpfile.scap

# Print all the open system calls invoked by cat
sysdig proc.name=cat and evt.type=open

#Print the name of the files opened by cat
./sysdig -p"%evt.arg.name" proc.name=cat and evt.type=open

# List the available chisels
./sysdig -cl

# Run the spy_ip chisel for the 192.168.1.157 IP address:
sysdig –c spy_ip 192.168.1.157

# Output Format

# By default, sysdig prints the information for each captured event on a single line, with the following format:
# <evt.time> <evt.cpu> <proc.name> <thread.tid> <evt.dir> <evt.type> <evt.args>
# where: evt.time is the event timestamp evt.cpu is the CPU number where the event was captured proc.name is the name of the process that generated the event thread.tid id the TID that generated the event, which corresponds to the PID for single thread processes evt.dir is the event direction, > for enter events and < for exit events evt.type is the name of the event, e.g. 'open' or 'read' evt.args is the list of event arguments.

# The output format can be customized with the -p switch, using any of the fields listed by 'sysdig -l'.

# Filtering

# sysdig filters are specified at the end of the command line. The simplest filter is a simple field-value check:
sysdig proc.name=cat

# The list of available fields can be obtained with 'sysdig -l'. Checks can use one of these comparison operators: =, !=, <, <=, >, >= and contains. e.g.
sysdig fd.name contains /etc

# Multiple checks can be combined through parentheses and the following boolean operators: and, or, not. e.g.
sysdig "not(fd.name contains /proc or fd.name contains /dev)"

# Chisels
# Sysdig’s chisels are little scripts that analyze the sysdig event stream to perform useful actions. To get the list of available chisels, type
sysdig –cl

# For each chisel, you get the description and the list of arguments it expects. To run one of the chisels, you use the –c flag, e.g.:
sysdig –c topfiles_bytes

# If a chisel needs arguments, you specify them after the chisel name:
sysdig –c spy_ip 192.168.1.157

# Chiesls can be combined with filters:
sysdig -c topfiles_bytes "not fd.name contains /dev"